apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.20.0 (f3d54d784)
  labels:
    io.kompose.service: data
  name: data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.20.0 (f3d54d784)
      labels:
        io.kompose.network/myapp: "true"
        app: data
    spec:
      containers:
      - name: db
        image: alontrubin13/quotes-data:v2
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: data-secret
              key: MYSQL_DATABASE
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: data-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef: 
              name: data-secret
              key: MYSQL_PASSWORD
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql  # Mount path in the container
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysqldb-pvc
      initContainers:
      - name: init-mysql
        image: alpine:latest
        command: ["sh", "-c", "rm -rf /var/lib/mysql/*"]
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  strategy: {}
